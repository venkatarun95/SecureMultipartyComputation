Notation:
 - n Number of players
 - k Threshold
 - Unless otherwise specified, 'group exponentiations' means with preprocessing

============= COMPLEXITY IN TERMS OF NUMBER OF OPERATIONS ============

PedersonShare::computeMac
 - k group exponentiations
 - 2k group multiplications

PedersonShare::validate
 > 1 PedersonShare::computeMac
 - k+2 group exponentiations
 - 2k+1 group multiplications

PedersonShare::evaluatePolynomial
 - k Z_p additions
 - 2k Z_p multiplications

PedersonShare::add
 - k group multiplications
 - 2 Z_p additions

PedersonShare::constMultiply
 - k group exponentiations
 - 2 Z_p multiplications

PedersonShare::shareValue
 > n PedersohShare::evaluatePolynomial
 - 2k group exponentiations
 - k group multiplications
 - 2k Z_p random choices
 - nk Z_p additions
 - 2nk Z_p multiplications

PedersonShare::shareConstValue
 > n PedersohShare::evaluatePolynomial
 - 2k group exponentiations
 - k group multiplications
 - nk Z_p additions
 - 2nk Z_p multiplications

PedersonShare::combineShares
 > 1 PedersonShare::validate
 - k+2 group exponentiations
 - 2k+1 group multiplications
 - 2k*k Z_p multiply
 - k Z_p add


PedersonMultiply::getVandermondeInv
 - Amortized cost = 0 over large no. of operations.

PedersonMultiply::sharedPoly
 > 1 PedersonShare::shareValue
 - 2k group exponentiations
 - k group multiplications
 - 2k Z_p random choices
 - nk Z_p additions
 - 2nk Z_p multiplications

PedersonMultiply::zkpProverStep1
 > 1 PedersonShare::computeMac
 - 1+(k) group exponentiations
 - 1 no-preprocessed group exponentiation
 - 3+(2k) group multiplications
 - 5 Z_p random choices

PedersonMultiply::zkpProverStep2
 - k(k-1)+6 Z_p multiplications
 - k(k-1)/2+6 Z_p additions
 - k(k-1)/2 Z_p inversions

PedersonMultiply::verifyProof
 > 2 PedersonShare::computeMac
 - 5+(2k) group exponentiations
 - 3 non-preprocessed group exponentiations
 - 6+(4k) group multiplications



PedersonComm::verifyCommitmentEquality
 - n-1 send
 - n-1 recv

PedersonComm::shareSender
 > PedersonComm::verifyCommitmentEquality
 - 2(n-1) send
 - n-1 recv

PedersonComm::shareReceiver
 > PedersonShare::validate
 > PedersonComm::verifyCommitmentEquality
 - k+2 group exponentiations
 - 2k+1 group multiplications
 - (n-1) send
 - (n-1)+1 recv

PedersonComm::shareRandomNumber
 > 1 PedersonShare::shareValue
 > 1 PedersonShare::validate
 > n PedersonShare::add
 > 1 PedersonComm::shareSender
 > n-1 PedersonComm::shareReceiver
 - 2k+((n-1)(k+2)) group exponentiations
 - k+(2nk)+((n-1)(2k+1)) group multiplications
 - 2k Z_p random choices
 - nk+(2n) Z_p additions
 - 2nk Z_p multiplications
 - 2(n-1)+(n-1)(n-1) send
 - (n-1)+(n-1)n recv
Summary:
 - kn+k+2n-2 group exponentiations
 - 4kn-k+n-1 group multiplications
 - 2k Z_p random choices
 - nk+2n Z_p additions
 - 2nk Z_p multiplications
 - n*n-1 send
 - n*n-1 recv

PedersonComm::combineShares
 > PedersonShare::combineShares
 - k+2 group exponentiations
 - 2k+1 group multiplications
 - k Z_p add
 - 2k*k Z_p multiply
 - (n-1) send
 - (n-1) receive

PedersonComm::multiply
 > 1 PedersonComm:shareSender
 > n-1 PedersonComm::shareReceiver
 > 1 coinTossCommit/coinTossDecommit (ignoring)
 > 1 PedersonMultiply::zkpProverStep1
 > 1 PedersonMultiply::zkpProverStep2
 > 1 PedersonMultiply::verifyProof
 > t PedersonShare::constMultiply
 > t PedersonShare::add
 - (n-1)(k+2)+(1+k)+(5+2k) group exponentiations
 - (1)+(3) non-preprocessed group exponentiations
 - (n-1)(2k+1)+(3+2k)+(6+4k) group multiplications
 - (5) Z_p random choices
 - (k(k-1)+6) Z_p multiplications
 - (k(k-1)/2+6) Z_p additions
 - k(k-1)/2 Z_p inversions
 - 2(n-1)+(2(n-1))+((n-1)(n-1)) send
 - 2(n-1)+(n-1)+((n-1)n) recv
Summary:
 - nk+2n+2k+4 group exponentiations
 - 4 non-preprocessed group exponentiations
 - 2kn+4k+n+8 group multiplications
 - 5 Z_p random choices
 - k(k-1)+6 Z_p multiplications
 - k(k-1)/2+6 Z_p additions
 - k(k-1)/2 Z_p inversions
 - n*n+2n-3 send
 - n*n+2n-3 recv

PedersonComm::plaintextExponentiate
 > (n-1) PedersonShare::computeMac
 - 2+k+((n-1)k) group exponentiations
 - n-1+k+((n-1)2k) group multiplications
 - 2k*k Z_p multiplications
 - k*k Z_p inversions
 - 2(n-1) send
 - 2(n-1) recv

PedersonComm:plaintextBilinearExponentiate
 > (n-1) PedersonShare::computeMac
 - (n-1) bilinear pairing computations
 - 2+k+((n-1)k) group exponentiations
 - n-1+k+((n-1)2k) group multiplications
 - 2k*k Z_p multiplications
 - k*k Z_p inversions
 - 2(n-1) send
 - 2(n-1) recv



PRF::compute
 > 1 PedersonShare::add
 > 1 PedersonComm::shareRandomNumber
 > 1 PedersonComm::combineShares
 > 1 PedersonShare::shareConstValue
 > 2 PedersonComm::multiply
 - (kn+k+2n-2)+(k+1)+(2k)+2(nk+2n+2k+4) group exponentiations
 - 2(4) non-preprocessed group exponentiations
 - (k)+(4kn-k+n-1)+(2k+1)+(k)+2(2kn+4k+n+8) group multiplications
 - (5)+2(2k) Z_p random choices
 - (2)+(nk+2n)+(k)+(nk)+2(k(k-1)/2+6) Z_p additions
 - (2nk)+(2k*k)+(2nk)+2(k(k-1)+6) Z_p multiplications
 - 1+2(k(k-1)/2) Z_p inversions
 - (n*n-1)+(n-1)+2(n*n+2n-3) send
 - (n*n-1)+(n-1)+2(n*n+2n-3) recv
Summary:
 - 3kn+8k+6n+7 group exponentiations
 - 8 non-preprocessed group exponentiations
 - 8kn+11k+3n+16 group multiplications
 - 5+4k Z_p random choices
 - k*k+2kn+2n+14 Z_p additions
 - 4*k*k+4kn-2k+12 Z_p multiplications
 - 1+k(k-1) Z_p inversions
 - 3*n*n+5n-8 send
 - 3*n*n+5n-8 recv



BonehBoyenSign::compute
 > 2 PedersonShare::add
 > 2 PedersonComm::shareRandomNumber
 > 3 PedersonComm::multiply
 > 1 PedersonComm::combineShares
 > 1 PedersonShare::shareConstValue
 > 1 publicBilinearExponentiate?? - Currently in client-server model
 - (2k) Bilinear pairing computations
 - 2(kn+k+2n-2)+3(nk+2n+2k+4)+(k+2)+(2k)+(2+k) group exponentiations
 - 3(4) non-preprocessed group exponentiations
 - 2(k)+2(4kn-k+n-1)+3(2kn+4k+n+8)+(2k+1)+(k)+(k) group multiplications
 - 2(2k)+3(5) Z_p random choices
 - 2(2)+2(2nk)+3(k(k-1)+6)+(2k*k)+(2nk) Z_p multiplications
 - 2(nk+2n)+3(k(k-1)/2+6)+(k)+(nk) Z_p additions
 - 1+3(k(k-1)/2) Z_p inversions
 - 2(n*n-1)+3(n*n+2n-3)+(n-1) send
 - 2(n*n-1)+3(n*n+2n-3)+(n-1) recv
Summary
 - 2k Bilinear pairing computations
 - 5kn+12k+10n+12 group exponentiations
 - 12 non-preprocessed group exponentiations
 - 14kn+16k+5n+23 group multiplications
 - 4k+15 Z_p random choices
 - 5k*k+6kn-3k+22 Z_p multiplications
 - 3*k*k/2+3kn-k/2+4n+18 Z_p additions
 - 1+3k(k-1)/2 Z_p inversions
 - 5*n*n+7*n-12 send
 - 5*n*n+7*n-12 recv




========================== ROUND COMPLEXITY ==========================

PedersonComm::verifyCommitmentEquality
 - 1 round

PedersonComm::combineShares
 - 1 round
 
PedersonComm::shareRandomNumber
 - 1 round

PedersonComm::multiply
 - Exchange shares (1), commit to coin toss
 - Exchange ZKP commitments (1)
 - Open coin toss (1)
 - Exchange responses (1)
Summary: 4 rounds

PedersonComm::plaintextExponentiate
 - 1 round
 
PedersonComm::plaintextBilinearExponentiate
 - 1 round

PRF::compute
 > PedersonComm::shareRandomNumber
 > PedersonComm::multiply
 > PedersonComm::combineShares
 > PedersonComm::multiply
 > PedersonComm::plaintextExponentiate
 - 1+4+1+4+1=11 rounds

BonehBoyenSignature::compute
 > PedersonComm::shareRandomNumber
 > PedersonComm::multiply
 > PedersonComm::shareRandomNumber
 > PedersonComm::multiply
 > PedersonComm::combineShares
 > PedersonComm::multiply
 > PedersonCOmm::publicBilinearExponentiate?
 - 1+4+1+4+1+4=15 rounds
